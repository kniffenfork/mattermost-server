name: mattermost-build
on:
  pull_request:
  push:
    branches:
      - master
      - cloud
      - release-*
jobs:
  build-mattermost-server:
    name: Build mattermost-server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout mattermost-server
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Checkout mattermost-webapp
        run: |
          cd ..
          git clone --depth=1 --no-single-branch https://github.com/kniffenfork/mattermost-webapp.git
          cd mattermost-webapp
          git checkout $GITHUB_HEAD_REF || git checkout master
          export WEBAPP_GIT_COMMIT=$(git rev-parse HEAD)
          echo "$WEBAPP_GIT_COMMIT"
          FILE_DIST=dist.tar.gz
          runtime="2 minute"
          endtime=$(date -ud "$runtime" +%s)
          while [[ $(date -u +%s) -le $endtime ]]; do
            if curl -s --max-time 30 -f -o $FILE_DIST https://pr-builds.mattermost.com/mattermost-webapp/commit/$WEBAPP_GIT_COMMIT/mattermost-webapp.tar.gz; then
              break
            fi
            echo "Waiting for webapp git commit $WEBAPP_GIT_COMMIT with sleep 5: `date +%H:%M:%S`"
            sleep 5
          done
          if [[ -f "$FILE_DIST" ]]; then
            echo "Precompiled version of web app found"
            mkdir dist && tar -xf $FILE_DIST -C dist --strip-components=1
          else
          echo "Building web app from source"
          make dist
          fi
          cd ../mattermost-server
      - name: Checkout and build focalboard
        run: |
          cd ..
          git clone --depth=1 --no-single-branch https://github.com/mattermost/focalboard.git
          cd focalboard
          git checkout $GITHUB_HEAD_REF || git checkout $GITHUB_BASE_REF || git checkout rolling-stable
          echo $(git rev-parse HEAD)
          make server-linux
          echo "Building Boards product for web app"
          # make prebuild build-product # TODO figure out how to get this to run without bypassing the Makefile
          make prebuild
          cd mattermost-plugin/webapp
          npm run build:product
          cd ../../../mattermost-server
          make setup-go-work
      - name: Build
        run: |
          make config-reset
          make build-cmd BUILD_NUMBER='${GITHUB_HEAD_REF}-${GITHUB_RUN_ID}'
          make package BUILD_NUMBER='${GITHUB_HEAD_REF}-${GITHUB_RUN_ID}'
      - name: Persist dist artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: server-dist-artifact
          path: dist/
          retention-days: 14
      - name: Persist build artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: server-build-artifact
          path: build/
          retention-days: 14
  build-docker:
    name: Build docker image
    runs-on: ubuntu-latest
    needs:
      - build-mattermost-server
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@e9ef242655d12993efdcda9058dee2db83a2cb9b  # v3.0.2
        with:
          name: server-build-artifact
          path: build/
      - name: Login to Docker Hub
        uses: docker/login-action@3da7dc6e2b31f99ef2cb9fb4c50fb0971e0d0139 # v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@11e8a2e2910826a92412015c515187a2d6750279 # v2.4
      - name: Docker build and push
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          export TAG=$(echo "${{ github.event.pull_request.head.sha || github.sha }}" | cut -c1-7)
          ls
          cd build
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker buildx build --push --build-arg MM_PACKAGE=$MM_PACKAGE -t ${{ secrets.DOCKERHUB_USERNAME }}/mattermost:${TAG} .

